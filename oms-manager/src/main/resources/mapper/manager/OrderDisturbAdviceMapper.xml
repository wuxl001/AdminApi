<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.szag.oms.manager.common.dao.manager.OrderDisturbAdviceMapper" >
  <resultMap id="BaseResultMap" type="cn.szag.oms.manager.common.domain.manager.OrderDisturbAdvice" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="customer_id" property="customerId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="app_id" property="appId" jdbcType="VARCHAR" />
    <result column="sync_status" property="syncStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, customer_id, user_id, status, app_id, sync_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="cn.szag.oms.manager.common.domain.manager.OrderDisturbAdvice" >
    select 
    <include refid="Base_Column_List" />
    from order_disturb_advice
    <where>
    	<if test="customerId != null">
    		AND customer_id = #{customerId,jdbcType=VARCHAR}
    	</if>
    	<if test="userId != null">
    		AND user_id = #{userId,jdbcType=VARCHAR}
    	</if>
    	<if test="id !=null">
    		AND id = #{id,jdbcType=CHAR}
    	</if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from order_disturb_advice
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="cn.szag.oms.manager.common.domain.manager.OrderDisturbAdvice" >
    insert into order_disturb_advice (id, customer_id, user_id, 
      status, app_id, sync_status
      )
    values (#{id,jdbcType=CHAR}, #{customerId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{appId,jdbcType=VARCHAR}, #{syncStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.szag.oms.manager.common.domain.manager.OrderDisturbAdvice" >
    insert into order_disturb_advice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="appId != null" >
        app_id,
      </if>
      <if test="syncStatus != null" >
        sync_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="appId != null" >
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="syncStatus != null" >
        #{syncStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.szag.oms.manager.common.domain.manager.OrderDisturbAdvice" >
    update order_disturb_advice
    <set >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="appId != null" >
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="syncStatus != null" >
        sync_status = #{syncStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.szag.oms.manager.common.domain.manager.OrderDisturbAdvice" >
    update order_disturb_advice
    set customer_id = #{customerId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      app_id = #{appId,jdbcType=VARCHAR},
      sync_status = #{syncStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>
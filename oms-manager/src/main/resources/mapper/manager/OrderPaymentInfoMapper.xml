<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.szag.oms.manager.common.dao.manager.OrderPaymentInfoMapper" >
  <resultMap id="BaseResultMap" type="cn.szag.oms.manager.common.domain.manager.OrderPaymentInfo" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="payment_order_no" property="paymentOrderNo" jdbcType="VARCHAR" />
    <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.szag.oms.manager.common.domain.manager.OrderPaymentInfo" extends="BaseResultMap" >
    <result column="abnormal_remark" property="abnormalRemark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_id, payment_order_no, payment_time, status
  </sql>
  <sql id="Blob_Column_List" >
    abnormal_remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from order_payment_info
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from order_payment_info
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="cn.szag.oms.manager.common.domain.manager.OrderPaymentInfo" >
    insert into order_payment_info (id, order_id, payment_order_no, 
      payment_time, status, abnormal_remark
      )
    values (#{id,jdbcType=CHAR}, #{orderId,jdbcType=VARCHAR}, #{paymentOrderNo,jdbcType=VARCHAR}, 
      #{paymentTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{abnormalRemark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.szag.oms.manager.common.domain.manager.OrderPaymentInfo" >
    insert into order_payment_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="paymentOrderNo != null" >
        payment_order_no,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="abnormalRemark != null" >
        abnormal_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="paymentOrderNo != null" >
        #{paymentOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="abnormalRemark != null" >
        #{abnormalRemark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.szag.oms.manager.common.domain.manager.OrderPaymentInfo" >
    update order_payment_info
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="paymentOrderNo != null" >
        payment_order_no = #{paymentOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="abnormalRemark != null" >
        abnormal_remark = #{abnormalRemark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.szag.oms.manager.common.domain.manager.OrderPaymentInfo" >
    update order_payment_info
    set order_id = #{orderId,jdbcType=VARCHAR},
      payment_order_no = #{paymentOrderNo,jdbcType=VARCHAR},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      abnormal_remark = #{abnormalRemark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.szag.oms.manager.common.domain.manager.OrderPaymentInfo" >
    update order_payment_info
    set order_id = #{orderId,jdbcType=VARCHAR},
      payment_order_no = #{paymentOrderNo,jdbcType=VARCHAR},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=CHAR}
  </update>
  <select id="selectByOrderId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from order_payment_info
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.szag.oms.manager.common.dao.manager.RuleRepositoryMapper" >
  <resultMap id="BaseResultMap" type="cn.szag.oms.manager.common.domain.manager.RuleRepository" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="use" property="use" jdbcType="VARCHAR" />
    <result column="repository_name" property="repositoryName" jdbcType="VARCHAR" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    <result column="deal_explain" property="dealExplain" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="updator" property="updator" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, use, repository_name, class_name, deal_explain, create_date, creator, update_date, 
    updator, del_flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from rule_repository
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from rule_repository
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="cn.szag.oms.manager.common.domain.manager.RuleRepository" >
    insert into rule_repository (id, use, repository_name, 
      class_name, deal_explain, create_date, 
      creator, update_date, updator, 
      del_flag)
    values (#{id,jdbcType=CHAR}, #{use,jdbcType=VARCHAR}, #{repositoryName,jdbcType=VARCHAR}, 
      #{className,jdbcType=VARCHAR}, #{dealExplain,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{creator,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{updator,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.szag.oms.manager.common.domain.manager.RuleRepository" >
    insert into rule_repository
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="use != null" >
        use,
      </if>
      <if test="repositoryName != null" >
        repository_name,
      </if>
      <if test="className != null" >
        class_name,
      </if>
      <if test="dealExplain != null" >
        deal_explain,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="updator != null" >
        updator,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="use != null" >
        #{use,jdbcType=VARCHAR},
      </if>
      <if test="repositoryName != null" >
        #{repositoryName,jdbcType=VARCHAR},
      </if>
      <if test="className != null" >
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="dealExplain != null" >
        #{dealExplain,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updator != null" >
        #{updator,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.szag.oms.manager.common.domain.manager.RuleRepository" >
    update rule_repository
    <set >
      <if test="use != null" >
        use = #{use,jdbcType=VARCHAR},
      </if>
      <if test="repositoryName != null" >
        repository_name = #{repositoryName,jdbcType=VARCHAR},
      </if>
      <if test="className != null" >
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="dealExplain != null" >
        deal_explain = #{dealExplain,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updator != null" >
        updator = #{updator,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.szag.oms.manager.common.domain.manager.RuleRepository" >
    update rule_repository
    set use = #{use,jdbcType=VARCHAR},
      repository_name = #{repositoryName,jdbcType=VARCHAR},
      class_name = #{className,jdbcType=VARCHAR},
      deal_explain = #{dealExplain,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      updator = #{updator,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>
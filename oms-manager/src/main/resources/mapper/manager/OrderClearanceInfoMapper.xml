<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.szag.oms.manager.common.dao.manager.OrderClearanceInfoMapper" >
  <resultMap id="BaseResultMap" type="cn.szag.oms.manager.common.domain.manager.OrderClearanceInfo" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="customs_declaration_no" property="customsDeclarationNo" jdbcType="VARCHAR" />
    <result column="customs_declaration_time" property="customsDeclarationTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="check_site" property="checkSite" jdbcType="VARCHAR" />
    <result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="creater_id" property="createrId" jdbcType="VARCHAR" />
    <result column="updater_id" property="updaterId" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.szag.oms.manager.common.domain.manager.OrderClearanceInfo" extends="BaseResultMap" >
    <result column="abnormal_remark" property="abnormalRemark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, customs_declaration_no, customs_declaration_time, status, check_site, check_time, 
    order_id, create_time, del_flag, creater_id, updater_id, update_time
  </sql>
  <sql id="Blob_Column_List" >
    abnormal_remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from order_clearance_info
    where id = #{id,jdbcType=CHAR} AND del_flag = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from order_clearance_info
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="cn.szag.oms.manager.common.domain.manager.OrderClearanceInfo" >
    insert into order_clearance_info (id, customs_declaration_no, customs_declaration_time, 
      status, check_site, check_time, 
      order_id, create_time, del_flag, 
      creater_id, updater_id, update_time, 
      abnormal_remark)
    values (#{id,jdbcType=CHAR}, #{customsDeclarationNo,jdbcType=VARCHAR}, #{customsDeclarationTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{checkSite,jdbcType=VARCHAR}, #{checkTime,jdbcType=TIMESTAMP}, 
      #{orderId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=INTEGER}, 
      #{createrId,jdbcType=VARCHAR}, #{updaterId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{abnormalRemark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.szag.oms.manager.common.domain.manager.OrderClearanceInfo" >
    insert into order_clearance_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="customsDeclarationNo != null" >
        customs_declaration_no,
      </if>
      <if test="customsDeclarationTime != null" >
        customs_declaration_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="checkSite != null" >
        check_site,
      </if>
      <if test="checkTime != null" >
        check_time,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="createrId != null" >
        creater_id,
      </if>
      <if test="updaterId != null" >
        updater_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="abnormalRemark != null" >
        abnormal_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="customsDeclarationNo != null" >
        #{customsDeclarationNo,jdbcType=VARCHAR},
      </if>
      <if test="customsDeclarationTime != null" >
        #{customsDeclarationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="checkSite != null" >
        #{checkSite,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="createrId != null" >
        #{createrId,jdbcType=VARCHAR},
      </if>
      <if test="updaterId != null" >
        #{updaterId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="abnormalRemark != null" >
        #{abnormalRemark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.szag.oms.manager.common.domain.manager.OrderClearanceInfo" >
    update order_clearance_info
    <set >
      <if test="customsDeclarationNo != null" >
        customs_declaration_no = #{customsDeclarationNo,jdbcType=VARCHAR},
      </if>
      <if test="customsDeclarationTime != null" >
        customs_declaration_time = #{customsDeclarationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="checkSite != null" >
        check_site = #{checkSite,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="createrId != null" >
        creater_id = #{createrId,jdbcType=VARCHAR},
      </if>
      <if test="updaterId != null" >
        updater_id = #{updaterId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="abnormalRemark != null" >
        abnormal_remark = #{abnormalRemark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.szag.oms.manager.common.domain.manager.OrderClearanceInfo" >
    update order_clearance_info
    set customs_declaration_no = #{customsDeclarationNo,jdbcType=VARCHAR},
      customs_declaration_time = #{customsDeclarationTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      check_site = #{checkSite,jdbcType=VARCHAR},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      order_id = #{orderId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=INTEGER},
      creater_id = #{createrId,jdbcType=VARCHAR},
      updater_id = #{updaterId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      abnormal_remark = #{abnormalRemark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.szag.oms.manager.common.domain.manager.OrderClearanceInfo" >
    update order_clearance_info
    set customs_declaration_no = #{customsDeclarationNo,jdbcType=VARCHAR},
      customs_declaration_time = #{customsDeclarationTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      check_site = #{checkSite,jdbcType=VARCHAR},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      order_id = #{orderId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=INTEGER},
      creater_id = #{createrId,jdbcType=VARCHAR},
      updater_id = #{updaterId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>
  <select id="select" resultMap="ResultMapWithBLOBs">
    select 
    oci.*,ows.schedule_status as scheduleStatus
    from order_clearance_info oci
    INNER JOIN order_worklist_status ows ON ows.clearanceId = oci.id
    where oci.order_id = #{orderId,jdbcType=VARCHAR} AND ows.id = #{containerId,jdbcType=VARCHAR}
  </select>
</mapper>